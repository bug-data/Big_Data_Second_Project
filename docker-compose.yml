version: '3'
services:

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"


  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - "zookeeper"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test:1:1,node1:1:1,node2:1:1,node3:1:1,node4:1:1,node5:1:1,node6:1:1,node7:1:1,node8:1:1,node9:1:1,node10:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      

  iot-data-producer:
    build: 
      context: ./iot-data-producer
    container_name: iot-source
    depends_on:
      - "kafka"


  spark-master:
    image: bde2020/spark-master:2.4.1-hadoop2.7
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark


  spark-worker-1:
    image: bde2020/spark-worker:2.4.1-hadoop2.7
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"


  influx:
    image: influxdb
    ports:
     - "8083:8083"
     - "8086:8086"
    environment:
     - INFLUXDB_USER=user
     - INFLUXDB_PASS=pass
     - INFLUXDB_NAME=dbname
     - PRE_CREATE_DB="dbname"


  grafana:
    image: grafana/grafana
    environment:
     - INFLUXDB_USER=user
     - INFLUXDB_PASS=pass
     - INFLUXDB_NAME=dbname
    ports:
     - "3000:3000"
    depends_on:
     - influx


  